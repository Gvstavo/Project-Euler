

# Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

#     22=4, 23=8, 24=16, 25=32
#     32=9, 33=27, 34=81, 35=243
#     42=16, 43=64, 44=256, 45=1024
#     52=25, 53=125, 54=625, 55=3125

# If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

# How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

b = 100;

2..b
|> Enum.to_list
|> Enum.reduce(0 ,fn a , acc -> 

	p? = 2..a
			 |> Enum.to_list
			 |> Enum.reduce_while(0,fn 
			 		x,_acc when x != a -> 

				 		{int , dec} = :math.log(a)
				 									|> Kernel./(:math.log(x))
				 									|> Float.ratio	

		

							if dec == 1, do: [a , x , int] |> IO.inspect 				

					 		if dec == 1, do:
					 			{
					 				:halt,	
					 				b
					 				|> Integer.floor_div(int)
									|> Kernel.-(1)
									|> Kernel.+(_acc)
								},
							else:
								{:cont , _acc}		

					x,_acc -> {:halt ,_acc}			

														


				 	end)
		

	acc + b - 1 - p?		 

			 

		

	




end)
|> IO.inspect
